name: 编译 OpenWrt 插件

on:
  workflow_dispatch:
    inputs:
      device_name:
        description: '设备名称'
        required: true
        default: 'k2p'
      firmware_version:
        description: '固件版本'
        required: true
        default: '22.03'
      openwrt_source:
        description: 'OpenWrt 源码压缩包地址 (.tar.xz)'
        required: true
        default: 'https://mirror-03.infra.openwrt.org/releases/22.03.0/targets/ramips/mt7621/openwrt-sdk-22.03.0-ramips-mt7621_gcc-11.2.0_musl.Linux-x86_64.tar.xz'
      plugin_source:
        description: '插件源码地址'
        required: true
        default: 'https://github.com/sirpdboy/luci-app-netwizard.git'

jobs:
  build:
    runs-on: ubuntu-20.04

    steps:
    - name: 检出代码
      uses: actions/checkout@v2

    - name: 安装依赖
      run: |
        sudo apt-get update
        sudo apt-get install -y build-essential ccache ecj fastjar file g++ gawk \
        gettext git java-propose-classpath libelf-dev libncurses5-dev \
        libncursesw5-dev libssl-dev python3 python3-distutils python3-setuptools \
        unzip wget rsync subversion swig time xsltproc zlib1g-dev tree

    - name: 设置 Python 软链接
      run: |
        sudo ln -sf /usr/bin/python3 /usr/bin/python

    - name: 下载并解压 OpenWrt 源码
      run: |
        wget ${{ github.event.inputs.openwrt_source }} -O openwrt.tar.xz
        mkdir openwrt
        tar -xJf openwrt.tar.xz -C openwrt --strip-components 1

    - name: 克隆插件源码
      working-directory: openwrt/package
      run: |
        # 克隆插件源码
        git clone ${{ github.event.inputs.plugin_source }} plugin
        cd plugin

        # 获取插件名称和版本
        NAME=$(grep -oP '(?<=NAME:=).*' Makefile)
        PKG_NAME=$(grep -oP '(?<=PKG_NAME:=).*' Makefile)
        if [[ "$PKG_NAME" == *'$(NAME)'* ]]; then
          PLUGIN_NAME=$(echo $PKG_NAME | sed "s/\${NAME}/$NAME/g")
        else
          PLUGIN_NAME="$PKG_NAME"
        fi
        PLUGIN_VERSION=$(grep -oP '(?<=PKG_VERSION:=).*' Makefile)
        echo "PLUGIN_NAME=$PLUGIN_NAME" >> $GITHUB_ENV
        echo "PLUGIN_VERSION=$PLUGIN_VERSION" >> $GITHUB_ENV

        echo "插件名称: $NAME"
        echo "插件包名称: $PKG_NAME"
        echo "插件合并名称: $PLUGIN_NAME"
        echo "插件版本: $PLUGIN_VERSION"

    - name: 更新 feeds
      working-directory: openwrt
      run: |
        ./scripts/feeds update -a
        ./scripts/feeds install -a

    - name: 配置 OpenWrt
      working-directory: openwrt
      run: |
        # 启用指定的插件包
        echo "CONFIG_PACKAGE_plugin=m" >> .config
        
        # 生成完整的 .config 文件
        make defconfig

    - name: 编译插件
      working-directory: openwrt
      run: |
        make package/plugin/compile V=s

    - name: 整理文件
      run: |
        mkdir -p firmware
        find openwrt/bin/packages/ -name "*.ipk" | xargs -I {} mv {} firmware/
        cd firmware
        for file in *.ipk; do
          mv "$file" "${{ github.event.inputs.device_name }}-${{ github.event.inputs.firmware_version }}-${{ env.PLUGIN_NAME }}-${{ env.PLUGIN_VERSION }}.ipk"
        done
        echo "生成的文件列表:"
        ls -l

    - name: 创建 Release
      uses: softprops/action-gh-release@v1
      with:
        files: firmware/*
        name: ${{ github.event.inputs.device_name }}-${{ github.event.inputs.firmware_version }}-${{ env.PLUGIN_NAME }}-${{ env.PLUGIN_VERSION }}
        tag_name: v${{ github.event.inputs.firmware_version }}-${{ env.PLUGIN_NAME }}-${{ env.PLUGIN_VERSION }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
